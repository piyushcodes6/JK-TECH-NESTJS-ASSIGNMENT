version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nestjs-backend
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=nestjs_assignment
      - JWT_SECRET=super-secret-jwt-key-change-in-production
      - JWT_EXPIRES_IN=24h
      - JWT_REFRESH_EXPIRES_IN=7d
      - UPLOAD_DIR=/app/uploads
      - MAX_FILE_SIZE=5242880
      - PYTHON_SERVICE_URL=http://localhost:5000
      - WEBHOOK_SECRET=webhook-secret-key-change-in-production
    volumes:
      - ./uploads:/app/uploads
      - ./src:/app/src # For development - hot reload
    networks:
      - backend-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  postgres:
    image: postgres:14-alpine
    container_name: postgres-db
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=nestjs_assignment
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - backend-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      # interval: 5s
      # timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    restart: always
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=piyushcodes6@gmail.com
      - PGADMIN_DEFAULT_PASSWORD=Admin1234!
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - backend-network

volumes:
  postgres-data:
    driver: local
  pgadmin-data:
    driver: local

networks:
  backend-network:
    driver: bridge

